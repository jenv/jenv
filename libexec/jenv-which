#!/usr/bin/env bash
#
# Summary: Display the full path to an executable
#
# Usage: jenv which <command>
#
# Displays the full path to the executable that jenv will invoke when
# you run the given command.

set -e
[ -n "$JENV_DEBUG" ] && set -x

# Provide jenv completions
if [ "$1" = "--complete" ]; then
  exec jenv shims --short
fi

JENV_VERSION="$(jenv-version-name)"
JENV_COMMAND="$1"

if [ -z "$JENV_COMMAND" ]; then
  jenv-help --usage which >&2
  exit 1
fi

if [ "$JENV_VERSION" = "system" ]; then
  JENV_COMMAND_PATH=$(type -ap "$JENV_COMMAND" \
    | awk '$1 !~ "'"${JENV_ROOT}/shims"'" { print $1; exit }') || true
else
  JENV_COMMAND_PATH="${JENV_ROOT}/versions/${JENV_VERSION}/bin/${JENV_COMMAND}"
  if ! [ -x "$JENV_COMMAND_PATH" ]; then
    JENV_COMMAND_PATH=$(type -ap "$JENV_COMMAND" \
      | awk '$1 !~ "'"${JENV_ROOT}/shims"'" { print $1; exit }') || true
  fi
fi

for script in $(jenv-hooks which); do
  source "$script"
done

if [ -x "$JENV_COMMAND_PATH" ]; then
  echo "$JENV_COMMAND_PATH"
else
  echo "jenv: $JENV_COMMAND: command not found" >&2

  versions="$(jenv-whence "$JENV_COMMAND" || true)"
  if [ -n "$versions" ]; then
    { echo
      echo "The \`$1' command exists in these Java versions:"
      echo "$versions" | sed 's/^/  /g'
      echo
    } >&2
  fi

  exit 127
fi
